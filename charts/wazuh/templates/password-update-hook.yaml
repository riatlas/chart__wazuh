{{- if lt .Chart.AppVersion "4.8.0" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-password-update-job"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install,post-upgrade,post-rollback
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-password-update-job"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      annotations:
        checksum/token: {{ .Values.cred | toString | sha256sum }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ .Release.Name }}-internal-kubectl
      containers:
        - name: kubectl
          image: "bitnami/kubectl"
          command:
            - "bin/bash"
            - "-c"
            - |
                kubectl -n wazuh exec -i wazuh-indexer-0 -c wazuh-indexer -- bash <<"EOF"
                INSTALLATION_DIR=/usr/share/wazuh-indexer
                CACERT=$INSTALLATION_DIR/certs/root-ca.pem
                KEY=$INSTALLATION_DIR/certs/admin-key.pem
                CERT=$INSTALLATION_DIR/certs/admin.pem
                export JAVA_HOME=/usr/share/wazuh-indexer/jdk

                # wait for opensearch running
                until $(bash -c "</dev/tcp/localhost/9200" &> /dev/null); do
                echo "waiting for opensearch port ..."
                sleep 10
                done

                bash /usr/share/wazuh-indexer/plugins/opensearch-security/tools/securityadmin.sh -cd /usr/share/wazuh-indexer/opensearch-security/ -nhnv -cacert  $CACERT -cert $CERT -key $KEY -p 9200 -icl && echo "password updated"
                EOF
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-internal-kubectl     
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-modify-pods
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"] 
  - apiGroups: [""] 
    resources: ["pods/exec"] 
    verbs: ["create", "delete"]   
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-modify-pods-to-sa
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-internal-kubectl
roleRef:
  kind: Role
  name: {{ .Release.Name }}-modify-pods
  apiGroup: rbac.authorization.k8s.io
{{- end }}










